
EXECUTABLE := parallel

CU_FILES   := parallel.cu

CU_DEPS    :=

CC_FILES   := main.cpp

###########################################################

ARCH=$(shell uname | sed -e 's/-.*//g')
OBJDIR=objs
CXX=g++ -m64
CXXFLAGS=-O3 -Wall -g
HOSTNAME=$(shell hostname)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_FORCE_INLINES")

LIBS       :=
FRAMEWORKS :=

NVCCFLAGS=-O3 -m64 --gpu-architecture compute_35
#LIBS += GL glut 

#ifneq ($(wildcard /opt/cuda-8.0/.*),)
# Latedays
#LDFLAGS=-L/opt/cuda-8.0/lib64/ -lcudart
#else
# GHC
#LDFLAGS=-L/usr/local/cuda/lib64/ -lcudart
#endif

#LDLIBS  := $(addprefix -l, $(LIBS))
#LDFRAMEWORKS := $(addprefix -framework , $(FRAMEWORKS))

NVCC=nvcc

OBJS=$(OBJDIR)/main.o $(OBJDIR)/parallel.o 


.PHONY: dirs clean

default: $(EXECUTABLE)

dirs:
		mkdir -p $(OBJDIR)/

clean:
		rm -rf $(OBJDIR) *~ $(EXECUTABLE) 

$(EXECUTABLE): dirs $(OBJS)
		$(CXX) $(CXXFLAGS) -o $@ $(OBJS) 

$(OBJDIR)/%.o: %.cpp
		$(CXX) $< $(CXXFLAGS) -std=c++11 -c -o $@

$(OBJDIR)/%.o: %.cu
		$(NVCC) $< $(NVCCFLAGS) -c -o $@
